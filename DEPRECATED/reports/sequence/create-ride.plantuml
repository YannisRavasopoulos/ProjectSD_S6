@startuml

actor Driver

participant HomeView
participant Navigator
participant LoopApp
participant CreateRideView
participant CreateRideViewModel
participant ActivitySelectionPanel
participant RideRepository

activate Driver

== Create Ride ==

activate LoopApp
activate RideRepository
activate HomeView
Driver -> HomeView: Presses "Create Ride"
HomeView -> HomeView: onCreateRideClick()
HomeView -> Navigator: pushNamed("/rides/create")
activate Navigator
Navigator -> LoopApp: "/rides/create"
LoopApp -> CreateRideViewModel: new CreateRideViewModel(...)
activate CreateRideViewModel
CreateRideViewModel --> LoopApp: return createRideViewModel
LoopApp -> CreateRideView: new CreateRideView(createRideViewModel)
activate CreateRideView
CreateRideView --> LoopApp: return createRideView
LoopApp --> Navigator: return createRideView
Navigator -> CreateRideView: build(context)

alt Create Insta-Ride
    Driver -> CreateRideView: Fills ride form fields
else Select from activities
    Driver -> CreateRideView: Presses "Select from activities"
    CreateRideView -> CreateRideView: showModalBottomSheet(activities)
    CreateRideView -> ActivitySelectionPanel: new ActivitySelectionPanel(activities, onActivitySelected)
    activate ActivitySelectionPanel
    Driver -> ActivitySelectionPanel: Selects activity
    ActivitySelectionPanel -> CreateRideView: onActivitySelected(activity)
    CreateRideView -> CreateRideViewModel: selectActivity(activity)
    CreateRideViewModel --> CreateRideView: return
    deactivate ActivitySelectionPanel
end
Driver -> CreateRideView: Presses "Create Ride"
CreateRideView -> CreateRideView: onCreateRidePressed(context)
CreateRideView -> CreateRideViewModel: createRide()
CreateRideViewModel -> RideRepository: create(ride)
alt Success
RideRepository -> Ride: new Ride(...)
activate Ride
Ride --> RideRepository: return ride
RideRepository --> CreateRideViewModel: return
CreateRideViewModel -> CreateRideViewModel: notifyListeners()
CreateRideViewModel --> CreateRideView: return
CreateRideView -> CreateRideView: showSuccessMessage()
deactivate Ride
opt Offer Ride
    Driver -> CreateRideView: Presses "Offer Ride"
    CreateRideView -> CreateRideView: onOfferRidePressed()
    CreateRideView -> Navigator: pushNamed("/rides/offer")
end
else Error
RideRepository --> CreateRideViewModel: return error
CreateRideViewModel -> CreateRideViewModel: notifyListeners()
CreateRideViewModel --> CreateRideView: return
CreateRideView -> CreateRideView: showErrorMessage()
end

deactivate CreateRideViewModel
deactivate CreateRideView

@enduml
