@startuml
actor User

actor User
participant RateView
participant RateViewModel
participant Rating
participant RatingRepository
participant Navigator
participant LoopApp

activate Navigator
activate LoopApp
activate RatingRepository

==Rate User==

Navigator --> LoopApp: "/rate", {rated}
LoopApp -> RateViewModel: RateViewModel(rateRepository, rated)
activate RateViewModel
RateViewModel --> LoopApp: return rateViewModel
LoopApp -> RateView: RateView(rateViewModel)
activate RateView
RateView --> LoopApp: return rateView
LoopApp --> Navigator: return rateView
Navigator -> RateView: build(context)
User -> RateView: Selects rating
RateView -> RateView: onRatingSelected(rating)


' User -> RateView: Selects report reason
' ReportView -> RateView: ReasonSelected(reason)
' opt
'     User -> ReportView: Enter description
'     ReportView -> ReportView: onDescriptionChanged(description)
' end
' User -> ReportView: Presses "Submit"
' ReportView -> ReportView: onSubmitPressed()
' ReportView -> ReportConfirmationDialog: ReportConfirmationDialog(report, onConfirm, onCancel)
' activate ReportConfirmationDialog
' alt Confirm
'     ReportConfirmationDialog -> ReportView: onConfirm()
'     ReportView -> ReportViewModel: submitReport()
'     ReportViewModel -> Report: Report(reportee, reason, description)
'     activate Report
'     Report --> ReportViewModel: return report
'     ReportViewModel -> ReportRepository: createReport(report)
'     ReportRepository --> ReportViewModel
'     ReportViewModel --> ReportView
'     ReportView -> ReportView: onReportSubmitted()
'     ReportView -> ReportView: showSuccessMessage()
'     deactivate Report
' else Cancel
'     ReportConfirmationDialog -> ReportView: onCancel()
'     deactivate ReportConfirmationDialog
'     ReportView -> Navigator: pop()
' end

@enduml
