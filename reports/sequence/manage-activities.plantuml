@startuml

participant User
participant HomeView
participant Navigator
participant LoopApp

participant ActivitiesView
participant ActivitiesViewModel
participant ActivityCard
participant ActivityDeletionDialog

participant CreateActivityView
participant CreateActivityViewModel

participant Activity
participant ActivityRepository


activate LoopApp
activate Navigator
activate HomeView
activate ActivitiesViewModel

== Manage Activities ==
User -> HomeView: Presses "Activities"
HomeView -> HomeView: onActivitiesPressed()
HomeView -> Navigator: pushNamed("/activities")
Navigator -> LoopApp: "/activities"
LoopApp -> ActivitiesView: ActivitiesView(activitiesViewModel)
activate ActivitiesView
ActivitiesView --> LoopApp: return activitiesView
LoopApp --> Navigator: return activitiesView
Navigator -> ActivitiesView: build(context)
User -> ActivitiesView: Selects "Create Activity"
ActivitiesView -> Navigator: pushNamed("/create-activity")
Navigator -> LoopApp: "/create-activity"
LoopApp -> CreateActivityViewModel: CreateActivityViewModel(args)
activate CreateActivityViewModel
CreateActivityViewModel --> LoopApp: return createActivityViewModel
LoopApp -> CreateActivityView: CreateActivityView(createActivityViewModel)
activate CreateActivityView
CreateActivityView --> LoopApp: return createActivityView
LoopApp --> Navigator: return createActivityView
Navigator -> CreateActivityView: build(context)
User -> CreateActivityView: Fills in activity details and presses "Create"
CreateActivityView -> CreateActivityViewModel: createActivity(activity)
CreateActivityViewModel -> ActivityRepository: create(activity)
alt Success
    ActivityRepository --> CreateActivityViewModel: return createdActivity
    CreateActivityViewModel -> ActivitiesViewModel: addActivity(createdActivity)
    ActivitiesViewModel -> ActivitiesView: updateActivities()
    ActivitiesView -> ActivitiesViewModel: fetchActivities()
    ActivitiesViewModel -> ActivityRepository: fetchActivities()
    ActivityRepository -> Activity: Activity(...)
    activate Activity
    Activity --> ActivityRepository: return activities
    ActivityRepository --> ActivitiesViewModel: return activities
    ActivitiesViewModel -> ActivitiesView: updateActivities(activities)
else Failure
    CreateActivityViewModel -> CreateActivityView: showError(errorMessage)
end
User -> ActivitiesView: Selects an activity and presses "Delete"
ActivitiesView -> ActivityCard: ActivityCard(activity, onDeletePressed)
activate ActivityCard
ActivityCard --> ActivitiesView: return activityCard
ActivityCard -> ActivityDeletionDialog: ActivityDeletionDialog(activity, onConfirmPressed, onCancelPressed)
activate ActivityDeletionDialog
ActivityDeletionDialog --> ActivityCard: return dialog
ActivityCard -> ActivityCard: showDialog(dialog)
alt Confirm
User -> ActivityDeletionDialog: Presses "Confirm"
ActivityDeletionDialog -> ActivityCard: onConfirmPressed()
ActivityCard -> ActivitiesViewModel: deleteActivity(activity)
ActivitiesViewModel -> ActivityRepository: delete(activity)
alt Success
    ActivityRepository --> ActivitiesViewModel: return ok
    ActivitiesViewModel -> ActivitiesView: removeActivity(activity)
end
else Cancel
    ActivityDeletionDialog -> ActivityCard: onCancelPressed()
end
deactivate ActivityDeletionDialog




@enduml